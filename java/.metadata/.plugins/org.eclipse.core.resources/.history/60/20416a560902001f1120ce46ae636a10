package BaekJoon_그리디;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.PrimitiveIterator;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class BackJoon_그리디6_1931_회의실배정 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//		StringTokenizer st = new StringTokenizer(br.readLine());
		PriorityQueue<int[]> que = new PriorityQueue<>((arr1, arr2)->arr1[1]-arr2[1]);

		que.add(new int[] {1, 9});
		que.add(new int[] {2, 3});
		que.add(new int[] {3, 5});
		que.add(new int[] {3, 4});
		System.out.println(Arrays.toString(que.poll()));
		System.out.println(Arrays.toString(que.poll()));
		System.out.println(Arrays.toString(que.poll()));
		System.out.println(Arrays.toString(que.poll()));
//		int n = Integer.parseInt(st.nextToken());
//		int [][] timeTable = new int[n][2];
//		
//		for(int i = 0 ; i < n ; i++) {
//			st = new StringTokenizer(br.readLine());
//			int a = Integer.parseInt(st.nextToken());
//			int b = Integer.parseInt(st.nextToken());
//			timeTable[i][0] = a; //i번째 회의가 0에서 시작해서 1에서 끝나는 
//			timeTable[i][1] = b;
//		}
	}
}
