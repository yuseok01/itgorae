package BaekJoon_graph;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class BaekJoon_4_1707_이분그래프 {
    static int[] A;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine(), " ");

        int N = Integer.parseInt(st.nextToken())+1;
        int M = Integer.parseInt(st.nextToken());

        A = new int[N];
        for(int i=0; i<N; i++){
            A[i] = i;
        }

        StringBuilder sb = new StringBuilder();
        for(int i=0; i<M; i++){
            st = new StringTokenizer(br.readLine(), " ");

            boolean c = st.nextToken().equals("0") ? true : false;
            int a = Integer.parseInt(st.nextToken());
            int b = Integer.parseInt(st.nextToken());

            if(c){
                union(a, b);
            }else{
                int x = find(a);
                int y = find(b);
                sb.append(x == y ? "YES" : "NO").append("\n");
            }
        }
        System.out.println(sb);

    }

    static void union(int a, int b){
        int x = find(a);
        int y = find(b);

        A[y] = x;
    }

    static int find(int a){
        if(A[a] == a){
            return a;
        }else{
            A[a] = find(A[a]);
            return A[a];
        }

    }

}